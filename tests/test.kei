Static nat : *.
Static Z : nat.
Static S : ~ {nat :: | Z | S} ~> nat.

Nat
  {nat :: | Z | S}.

+ 
 | n y :: ~ Nat ~> ~ Nat ~> Nat => [n of Nat
  |Z => y
  |(S x) => (S (+ x y))
].

Static vector : ~ * ~> (x : Nat) *.
Static nil : (A : *) (vector A Z).
Static cons : (A : *) (x : Nat) (y : A) (H : {(vector A x) :: |nil |cons}) (vector A (S x)).

Vector
 | A n :: (A : *) ~> ~ Nat ~> * => {(vector A n) :: |nil |cons}.

concat_type
   (A : *) (n : Nat) (m : Nat)
    ~ (Vector A n) ~> ~ (Vector A m) ~> (Vector A (+ n m)).

concat 
 | A n m vec vec2 :: concat_type => [vec of (Vector A (+ n m))
      |(cons _ len head tail) => ((cons A (+ len m) head (concat A len m tail vec2)) :: (Vector A (+ (S len) m)))
      |(nil _) => (vec2 :: (Vector A (+ Z m)))
    ].
